@using Application.JobItems.Queries.Response;
@model GetByIdJobQueryResponse

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Job</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.JobName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.JobName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.JobTitle)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.JobTitle)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.JobDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.JobDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.JobTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.JobTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JobRequirementList)
        </dt>
        @if(Model.JobRequirementList != null){
            @foreach (var item in Model.JobRequirementList)
            {
                <dd class="col-sm-10">
                     @item.Name
                </dd>
            } 
        }
       
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
